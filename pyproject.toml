[build-system]
requires = ["setuptools>=58.0.4", "wheel>=0.37.0"]
build-backend = "setuptools.build_meta"

[project]
name = "LeonardoBot"
description = ""
version = "0.0.1"
authors = [
    { name = "nikoontelegram", email = "nikoontelegram@gmail.com" },
]
license = { text = "MIT" }
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    'aiogram>=3.11.0',
    'pydantic-settings>=2.2.1',
    'openai>=1.52.2',
    'redis[hiredis]>=5.2.0',
]
requires-python = ">=3.11"

[tool.setuptools]
package-dir = {"" = "src"}
packages = {find = {where = ["src"]}}
py-modules = ["ai_client", "config", "main"]

[project.scripts]
bot-run = "main:run_main"

[tool.black]
line-length = 119
target-version = ['py311']
skip-string-normalization = true

[tool.pytest.ini_options]
testpaths = "tests"
filterwarnings = [
    "ignore::DeprecationWarning",
]


[tool.ruff]  # https://github.com/charliermarsh/ruff
line-length = 119
target-version = "py311"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
  "D", # pydocstyle
  "TD", # flake8-todos
  "FIX", # flake8-fixme
  "ANN", # flake8-annotations (handled by mypy)
  "E501", # pycodestyle - line too long (handled by formatter)
  "COM812", # forced by ruff formatter
  "ISC001", # forced by ruff formatter
  "INP001", # part of an implicit namespace package. Add an `__init__.py`
  "PLR0911", # Too many return statements
  "RUF001",  # Ambiguous unicode character
]
unfixable = [
  "F", # pyflakes
  "ERA", # eradicate - commented-out code
]
allowed-confusables = [
  "а", "А", "б", "Б", "в", "В", "г", "Г", "е", "Е", "з", "З", "и", "И", "к", "К", "м", "М",
  "н", "Н", "о", "О", "р", "Р", "с", "С", "т", "Т", "у", "У", "ф", "Ф", "х", "Х"  # Allow cyrillic letters
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = [
  "F401", # Unused import
  "F403", # Import star
  "ARG001", # Unused function argument (using fixtures from other fixtures)
]
"tests/**/*.py" = [
  "S101", # Use of assert detected (assert allowed in tests)
  "S105", # Possible hardcoded password
  "S106", # Possible hardcoded password
  "PLR2004", # Magic value used in comparison
]
"src/ass.py" = ["ALL"]

[tool.ruff.lint.flake8-tidy-imports]  # https://docs.astral.sh/ruff/settings/#lintflake8-tidy-imports
ban-relative-imports = "all"

[tool.ruff.lint.flake8-boolean-trap]  # https://docs.astral.sh/ruff/settings/#lintflake8-bugbear
extend-allowed-calls = ["pydantic.Field", "django.db.models.Value"]

[tool.ruff.lint.flake8-builtins]
builtins-ignorelist = ["id"]

[tool.ruff.lint.flake8-bugbear]  # https://docs.astral.sh/ruff/settings/#lintflake8-bugbear
extend-immutable-calls = ["fastapi.Depends", "fastapi.Query", "fastapi.Path", "fastapi.Body", "fastapi_filter.FilterDepends"]

[tool.ruff.lint.flake8-type-checking]
exempt-modules = ["typing", "typing_extensions"]

[tool.ruff.lint.isort]  # https://docs.astral.sh/ruff/settings/#isort
section-order = ["future", "typing", "standard-library", "third-party", "first-party", "local-folder"]
lines-between-types = 1
split-on-trailing-comma = false

[tool.ruff.lint.isort.sections]
"typing" = ["typing", "types", "typing_extensions", "mypy", "mypy_extensions"]

[tool.ruff.lint.pep8-naming]
classmethod-decorators = [
  # Allow Pydantic's `@validator` decorator to trigger class method treatment.
  "pydantic.validator",
  # Allow SQLAlchemy's dynamic decorators, like `@field.expression`, to trigger class method treatment.
  "declared_attr",
  "expression",
  "comparator",
]

[tool.ruff.lint.pycodestyle]  # https://docs.astral.sh/ruff/settings/#pycodestyle
max-doc-length = 100

[tool.ruff.lint.pydocstyle]  # https://docs.astral.sh/ruff/settings/#pydocstyle
convention = "google"

[tool.ruff.lint.pylint]  # https://docs.astral.sh/ruff/settings/#pylint
allow-dunder-method-names = ["__tablename__", "__table_args__"]
allow-magic-value-types = ["int", "str", "bytes"]
max-args = 10
max-statements = 30

[tool.ruff.format]
docstring-code-format = true
indent-style = "space"
quote-style = "double"
skip-magic-trailing-comma = true
